#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
const int N = 150, inf = 1e9 + 7;

// vector<pair<int, int>> adj[N];
int adj[N][N], d[N][N];
int n, m;

void floyed_warshall()
{
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (i != j)
            {
                d[i][j] = adj[i][j];
            }
        }
    }

    for (int k = 0; k < n; k++)
    {
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
            {
                if (i != j)
                    d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
            }
        }
    }
}

void solve()
{

    cin >> n >> m;

    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            adj[i][j] = inf;

    while (m--)
    {
        int u, v, w;
        cin >> u >> v >> w;
        // adj[u].push_back({v, w});
        // adj[v].push_back({u, w});
        adj[u][v] = w;
        // adj[v][u] = w;
    }
    floyed_warshall();
    int q;
    cin >> q;
    while (q--)
    {
        int u, v;
        cin >> u >> v;
        int ans = d[u][v];
        if (ans == inf)
            cout << "Impossible\n";
        else
            cout << ans << endl;
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t = 1, cs = 1;
    // cin >> t;
    while (t--)
    {
        // cout << "Case " << cs++ << ": ";
        solve();
    }
}
